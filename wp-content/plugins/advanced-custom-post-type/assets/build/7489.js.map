{"version":3,"file":"7489.js","mappings":"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","sources":["webpack://advanced-custom-post-type/./assets/src/App/localization/locales/ sync ^\\.\\/.*\\.js$","webpack://advanced-custom-post-type/./assets/src/App/components/pages/TaxonomyList/TaxonomyListElement.js","webpack://advanced-custom-post-type/./assets/src/App/components/pages/TaxonomyList/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/CustomPostType/CustomPostTypeLabel.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/ExportCodeModal/ShowCode.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/ExportCodeModal/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/ActionsBar/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Breadcrumbs/Breadcrumb.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Breadcrumbs/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Copyright/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/HeaderMenu.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/LanguagePlaceholder.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/Logo.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Pagination/index.js","webpack://advanced-custom-post-type/./assets/src/App/localization/index.js","webpack://advanced-custom-post-type/./assets/src/App/localization/locales/en.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/deleteTemplate.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/fetchTaxonomies.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/fetchTaxonomiesCount.js"],"sourcesContent":["var map = {\n\t\"./en.js\": 63167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48053;","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {isset} from \"../../../utils/objects\";\nimport Tippy from \"../../reusable/Tippy\";\nimport Modal from \"../../reusable/Modal\";\nimport CustomPostTypeLabel from \"../../reusable/CustomPostType/CustomPostTypeLabel\";\nimport {metaTypes} from \"../../../constants/metaTypes\";\nimport ExportCodeModal from \"../../reusable/ExportCodeModal\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst TaxonomyListElement = ({id, element, handleDeleteTemplate, enableVisualEditor}) => {\n\n    // manage local state\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalTemplateType, setModalTemplateType] = useState(null);\n    const [exportCodeModalVisible, setExportCodeModalVisible] = useState(false);\n\n    const hasTemplate = (templateType) => {\n        if(element.templates.length === 0){\n            return false;\n        }\n\n        let matches = 0;\n\n        element.templates.map((el) => {\n            if (el.templateType === templateType)\n                matches++;\n        });\n\n        return matches > 0;\n    };\n\n    // manage delete\n    const openDeleteModal = (templateType) => {\n        setModalVisible(!modalVisible);\n        setModalTemplateType(templateType);\n    };\n\n    return(\n        <React.Fragment>\n            <ExportCodeModal setModalVisible={setExportCodeModalVisible} modalVisible={exportCodeModalVisible} belongsTo={metaTypes.TAXONOMY} find={element.slug} />\n            <Modal title={useTranslation(\"Confirm deleting this template?\")} visible={modalVisible}>\n                <p>Are you sure?</p>\n                <p>\n                    <a\n                        href=\"#\"\n                        className=\"acpt-btn acpt-btn-primary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setModalVisible(!modalVisible);\n                            handleDeleteTemplate(element.slug, modalTemplateType);\n                        }}\n                    >\n                        {useTranslation(\"Yes\")}\n                    </a>\n                    &nbsp;\n                    <a\n                        href=\"#\"\n                        className=\"acpt-btn acpt-btn-primary-o\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setModalVisible(!modalVisible);\n                        }}\n                    >\n                        {useTranslation(\"No\")}\n                    </a>\n                </p>\n            </Modal>\n            <tr>\n                <td className=\"backend\">\n                    <div className=\"m-0 mb-1\">\n                        <strong>{element.slug}</strong>\n                        {!element.isNative && (\n                            <div className=\"element-buttons\">\n                                <a href={`#/view_taxonomy/${element.slug}`}>\n                                    {useTranslation(\"View\")}\n                                </a>\n                                <a href={`#/edit_taxonomy/${element.slug}`}>\n                                    {useTranslation(\"Edit\")}\n                                </a>\n                                <a href={`#/delete_taxonomy/${element.slug}`}>\n                                    {useTranslation(\"Delete\")}\n                                </a>\n                                <a\n                                    href=\"#\"\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setExportCodeModalVisible(!exportCodeModalVisible);\n                                    }}\n                                >\n                                    {useTranslation(\"Export code\")}\n                                </a>\n                            </div>\n                        )}\n                    </div>\n                </td>\n                <td>\n                    <CustomPostTypeLabel element={element} />\n                </td>\n                <td>\n                    {isset(element, \"meta\") &&  element.meta.length > 0 ?\n                        <Link\n                            to={`meta-taxonomy/${element.slug}`}\n                            className=\"acpt-btn no-border acpt-btn-sm acpt-btn-info-o\"\n                        >\n                            {useTranslation(\"Manage\")}\n                        </Link>\n                        :\n                        <Link\n                            to={`/meta-taxonomy/${element.slug}`}\n                            className=\"acpt-btn no-border acpt-btn-sm acpt-btn-primary-o\"\n                        >\n                            {useTranslation(\"Create\")}\n                        </Link>\n                    }\n                </td>\n                <td>\n                    {isset(element, \"customPostTypes\") &&  element.customPostTypes.length > 0 ?\n                        <Link\n                            to={`/assoc-post-taxonomy/${element.slug}`}\n                            className=\"acpt-btn no-border acpt-btn-sm acpt-btn-info-o\"\n                        >\n                            {useTranslation(\"Manage\")}\n                        </Link>\n                        :\n                        <Link\n                            to={`/assoc-post-taxonomy/${element.slug}`}\n                            className=\"acpt-btn no-border acpt-btn-sm acpt-btn-primary-o\"\n                        >\n                            {useTranslation(\"Associate\")}\n                        </Link>\n                    }\n                </td>\n                <td className=\"with-border\">\n                    <span className=\"acpt-badge\">\n                        <span className=\"label\">\n                            {element.postCount}\n                        </span>\n                    </span>\n                </td>\n                <td className=\"frontend\">\n                    {(enableVisualEditor !== \"1\") ?\n                        <React.Fragment>\n                            <Tippy\n                                placement='end'\n                                html={(\n                                    <div>{useTranslation(\"The visual builder is disabled. Go to Settings page and enable it.\")}</div>\n                                )}\n                                    >\n                                <span\n                                    className=\"acpt-btn no-border acpt-btn-sm acpt-btn-secondary-o cursor-not-allowed\"\n                                >\n                                    {useTranslation(\"Disabled\")}\n                                </span>\n                            </Tippy>\n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                            {hasTemplate('single') ? (\n                                <React.Fragment>\n                                    <Link\n                                        to={`/template/taxonomy/single/${element.slug}`}\n                                        className={`acpt-btn no-border acpt-btn-sm acpt-btn-info-o`}\n                                    >\n                                        {useTranslation(\"Manage\")}\n                                    </Link>\n                                    <a\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            e.stopPropagation();\n                                            openDeleteModal('single');\n                                        }}\n                                        className=\"ml-1 acpt-btn no-border acpt-btn-sm acpt-btn-danger-o\"\n                                        href=\"#\"\n                                    >\n                                        {useTranslation(\"Delete\")}\n                                    </a>\n                                </React.Fragment>\n                            ) : (\n                                <Link\n                                    to={`/template/taxonomy/single/${element.slug}`}\n                                    className={`acpt-btn no-border acpt-btn-sm acpt-btn-primary-o`}\n                                >\n                                    {useTranslation(\"Create\")}\n                                </Link>\n                            )}\n                        </React.Fragment>\n                    }\n                </td>\n            </tr>\n        </React.Fragment>\n    )\n};\n\nexport default TaxonomyListElement;","import React, {useEffect, useRef, useState} from 'react';\nimport {changeCurrentAdminMenuLink, metaTitle, refreshPage} from \"../../../utils/misc\";\nimport Breadcrumbs from \"../../reusable/Layout/Breadcrumbs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport Spinner from \"../../reusable/Loader/Spinner\";\nimport {fetchTaxonomiesCount} from \"../../../redux/thunks/fetchTaxonomiesCount\";\nimport {fetchTaxonomies} from \"../../../redux/thunks/fetchTaxonomies\";\nimport Pagination from \"../../reusable/Pagination\";\nimport TaxonomyListElement from \"./TaxonomyListElement\";\nimport {Icon} from \"@iconify/react\";\nimport Tippy from \"../../reusable/Tippy\";\nimport {translate} from \"../../../localization\";\nimport {filterByLabel} from \"../../../utils/objects\";\nimport Layout from \"../../reusable/Layout\";\nimport ActionsBar from \"../../reusable/Layout/ActionsBar\";\nimport {deleteTemplate} from \"../../../redux/thunks/deleteTemplate\";\nimport {metaTypes} from \"../../../constants/metaTypes\";\nimport {toast} from \"react-toastify\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst TaxonomyList = () => {\n\n    // manage global state\n    const dispatch = useDispatch();\n    const {fetched, loading} = useSelector(state => state.fetchTaxonomiesReducer);\n    const {fetched: fetchedCount, loading:loadingCount} = useSelector(state => state.fetchTaxonomiesCountReducer);\n    const {loading: settingsLoading, fetched: settings} = useSelector(state => state.fetchSettingsReducer);\n    const {errors: deleteTemplateErrors, success: deleteTemplateSuccess, loading: deleteTemplateLoading} = useSelector(state => state.deleteTemplateReducer);\n\n    // manage local state\n    const {page} = useParams();\n    const didMountRef = useRef(false);\n    const [fetchedSuccess, setFetchedSuccess] = useState(null);\n    const perPage = (settings.length > 0 && filterByLabel(settings, 'key', 'records_per_page') !== '') ? filterByLabel(settings, 'key', 'records_per_page').value : 20;\n    const enableVisualEditor = (settings.length > 0 && filterByLabel(settings, 'key', 'enable_visual_editor') !== '') ? filterByLabel(settings, 'key', 'enable_visual_editor').value : false;\n    const totalPages = Math.ceil( fetchedCount / perPage );\n    const history = useHistory();\n\n    useEffect(() => {\n        metaTitle(useTranslation(translate(\"taxonomy_list.title\")));\n        changeCurrentAdminMenuLink('#/taxonomies');\n        dispatch(fetchTaxonomiesCount());\n        dispatch(fetchTaxonomies({\n            page: page ? page : 1,\n            perPage: perPage\n        }));\n    }, [page]);\n\n    // handle fetch outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!loading && !settingsLoading){\n                setFetchedSuccess(true);\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [loading]);\n\n    // handle delete template outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!deleteTemplateLoading){\n                if(deleteTemplateSuccess){\n                    history.push('/taxonomies');\n                    toast.success(useTranslation(\"Template was successfully deleted. The browser will refresh after 5 seconds.\"));\n                    refreshPage(5000);\n                }\n\n                if(deleteTemplateErrors.length > 0){\n                    deleteTemplateErrors.map((error) => {\n                        toast.error(error);\n                    });\n                }\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [deleteTemplateLoading]);\n\n    const handleDeleteTemplate = (slug, type) => {\n        dispatch(deleteTemplate(metaTypes.TAXONOMY, slug, type));\n    };\n\n    if(!fetchedSuccess){\n        return <Spinner/>;\n    }\n\n    const button =\n        <Link\n            className=\"acpt-btn acpt-btn-primary\"\n            to=\"/register_taxonomy\"\n        >\n            {useTranslation(\"Register new Taxonomy\")}\n        </Link>;\n\n    return (\n        <Layout>\n            <ActionsBar\n                title={useTranslation(\"Registered Taxonomies\")}\n                actions={button}\n            />\n            <main>\n                <Breadcrumbs crumbs={[\n                    {\n                        label: useTranslation(\"Registered Taxonomies\")\n                    }\n                ]} />\n                {fetched.length > 0 ?\n                    <div className=\"acpt-card\">\n                        <div className=\"acpt-card__header\">\n                            <div className=\"acpt-card__inner\">\n                                {fetchedCount} {useTranslation(\"record(s) found\")}\n                            </div>\n                        </div>\n                        <div className=\"acpt-card__body\">\n                            <div className=\"acpt-table-responsive\">\n                                <table className={`acpt-table ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                Slug\n                                                &nbsp;\n                                                <Tippy title={useTranslation(\"Taxonomy slug. The post name/slug. Used for various queries for taxonomy content.\")}>\n                                                    <span className=\"helper\">\n                                                        <Icon icon=\"bx:bx-help-circle\" color=\"#2271b1\" width=\"12px\"/>\n                                                    </span>\n                                                </Tippy>\n                                            </th>\n                                            <th>\n                                                {useTranslation(\"Type\")}\n                                            </th>\n                                            <th>\n                                                {useTranslation(\"Meta fields\")}\n                                                &nbsp;\n                                                <Tippy title={useTranslation(\"Associated meta fields\")}>\n                                                    <span className=\"helper\">\n                                                        <Icon icon=\"bx:bx-help-circle\" color=\"#2271b1\" width=\"12px\"/>\n                                                    </span>\n                                                </Tippy>\n                                            </th>\n                                            <th>\n                                                {useTranslation(\"Associated post types\")}\n                                                &nbsp;\n                                                <Tippy title={useTranslation(\"Associate custom post types here\")}>\n                                                    <span className=\"helper\">\n                                                        <Icon icon=\"bx:bx-help-circle\" color=\"#2271b1\" width=\"12px\"/>\n                                                    </span>\n                                                </Tippy>\n                                            </th>\n                                            <th className=\"with-border\">\n                                                {useTranslation(\"Post count\")}\n                                                &nbsp;\n                                                <Tippy title={useTranslation(\"Published posts count associated with the taxonomy\")}>\n                                                    <span className=\"helper\">\n                                                        <Icon icon=\"bx:bx-help-circle\" color=\"#2271b1\" width=\"18px\"/>\n                                                    </span>\n                                                </Tippy>\n                                            </th>\n                                            <th className=\"text-center\">\n                                                {useTranslation(\"Single template\")}\n                                                &nbsp;\n                                                <Tippy title={useTranslation(\"The single template for taxonomy term\")}>\n                                                    <span className=\"helper\">\n                                                        <Icon icon=\"bx:bx-help-circle\" color=\"#2271b1\" width=\"12px\"/>\n                                                    </span>\n                                                </Tippy>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {fetched.map((element) => (\n                                            <TaxonomyListElement\n                                                id={element.id}\n                                                key={element.id}\n                                                element={element}\n                                                handleDeleteTemplate={handleDeleteTemplate}\n                                                enableVisualEditor={enableVisualEditor}\n                                            />\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        {totalPages > 1 && (\n                            <div className=\"acpt-card__footer\" style={{border: \"none\"}}>\n                                <div className=\"acpt-card__inner\">\n                                    <Pagination currentPage={page ? page : 1} perPage={perPage} records={fetchedCount}/>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    :\n                    <div className=\"acpt-alert acpt-alert-secondary\">\n                        {useTranslation(\"No taxonomies found.\")} <Link to=\"/register_taxonomy\">{useTranslation(\"Register the first one\")}</Link>!\n                    </div>\n                }\n            </main>\n        </Layout>\n    );\n};\n\nexport default TaxonomyList;","import React from 'react';\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst CustomPostTypeLabel = ({element}) => {\n\n    if(typeof element.isNative === 'undefined'){\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            {element.isNative\n                ?\n                <span className={`acpt-badge acpt-badge-native`}>\n                    <span className=\"label\">\n                        {useTranslation(\"Native\")}\n                    </span>\n                </span>\n                :\n                <span className={`acpt-badge acpt-badge-${element.isWooCommerce === true ? 'woocommerce' : 'custom' }`}>\n                    <span className=\"label\">\n                        {element.isWooCommerce === true ? 'WooCommerce' : useTranslation('Custom') }\n                    </span>\n                </span>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default CustomPostTypeLabel;","import React from \"react\";\nimport { CopyBlock, monoBlue } from \"react-code-blocks\";\n\nconst ShowCode = ({codeString}) => {\n\n    return (\n        <div\n            style={{\n                maxHeight: '450px',\n                overflow: 'auto'\n            }}\n        >\n            <CopyBlock\n                text={codeString}\n                language=\"php\"\n                showLineNumbers={false}\n                theme={monoBlue}\n                wrapLines\n                highlight\n            />\n        </div>\n    );\n};\n\nexport default ShowCode;","import Modal from \"../Modal\";\nimport React, {useEffect, useState} from \"react\";\nimport Accordion from \"../Accordion\";\nimport ShowCode from \"./ShowCode\";\nimport {wpAjaxRequest} from \"../../../utils/ajax\";\nimport {isEmpty, isset} from \"../../../utils/objects\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst ExportCodeModal = ({modalVisible, setModalVisible, belongsTo, find}) => {\n\n    // manage local state\n    const [codeStrings, setCodeStrings] = useState({});\n\n    useEffect(()=>{\n        if(modalVisible === true){\n            wpAjaxRequest(\"exportCodeAction\", {belongsTo :belongsTo, find:find})\n                .then(res => {\n                    setCodeStrings(res);\n                })\n                .catch(err => {\n                    console.error(err.message);\n                })\n            ;\n        }\n    }, [modalVisible]);\n\n    return (\n        <Modal title={useTranslation(\"Export code\")} visible={modalVisible} textAlign=\"left\">\n            <div className=\"mb-3\">\n                {(!isEmpty(codeStrings) && isset(codeStrings, 'wordpress') && isset(codeStrings, 'acpt')) ? (\n                    <Accordion cssClass=\"bordered w-full\">\n                        <ShowCode codeString={codeStrings.wordpress} title={`WORDPRESS`}/>\n                        <ShowCode codeString={codeStrings.acpt} title={`ACPT`}/>\n                    </Accordion>\n                ) : (\n                    <React.Fragment>\n                        {useTranslation(\"Generating code...\")}\n                    </React.Fragment>\n                )}\n            </div>\n            <div className=\"acpt-buttons text-left\">\n                <a\n                    href=\"#\"\n                    className=\"acpt-btn acpt-btn-primary-o\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        setModalVisible(false);\n                    }}\n                >\n                    {useTranslation(\"Close\")}\n                </a>\n            </div>\n        </Modal>\n    );\n};\n\nexport default ExportCodeModal;","import React from \"react\";\n\nconst ActionsBar = ({title, actions, secondaryActions}) => {\n\n    return (\n        <div className=\"actions-bar\">\n            <div className=\"title\">\n                <h1>\n                    {title}\n                </h1>\n            </div>\n            {secondaryActions && (\n                <div className={`secondary-actions ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n                    {secondaryActions}\n                </div>\n            )}\n            <div className={`actions ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n                {actions}\n            </div>\n        </div>\n    );\n};\n\nexport default ActionsBar;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\n\nconst Breadcrumb = ({label, link, isLast}) => {\n\n    return (\n        <React.Fragment>\n            <li className={isLast ? 'current' : ''}>\n                {link ?\n                    <Link to={link}>\n                        {label}\n                    </Link>\n                    :\n                    label\n                }\n            </li>\n            {!isLast && (\n                <span className=\"separator\">\n                    <Icon icon=\"bx:bx-chevron-right\" color=\"#aaa\" width=\"18px\" />\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Breadcrumb;","import React from 'react';\nimport Breadcrumb from \"./Breadcrumb\";\n\nconst Breadcrumbs = ({crumbs}) => {\n    return (\n        <div className={`acpt-breadcrumbs ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n            {crumbs.length > 0 && (\n                <ul>\n                    {crumbs.map((crumb, index) => (\n                        <Breadcrumb\n                            label={crumb.label}\n                            link={crumb.link}\n                            isLast={(index+1) === crumbs.length}\n                            key={index}\n                        />\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import React from 'react';\nimport useTranslation from \"../../../../hooks/useTranslation\";\n\nconst Copyright = () => {\n    return (\n        <div className=\"acpt-copyright\">\n            <span>\n                {useTranslation(\"Copyright\")} &copy; 2021 - {new Date().getFullYear()} &nbsp;\n                <a href=\"https://acpt.io\" target=\"_blank\">ACPT</a>\n            </span>\n        </div>\n    );\n};\n\nexport default Copyright;","import React, {useEffect, useRef} from 'react';\nimport {Link} from \"react-router-dom\";\nimport useTranslation from \"../../../../hooks/useTranslation\";\n\nconst HeaderMenu = ({isVisible, setIsVisible}) => {\n\n    const node = useRef();\n    const handleOutsideTitleBoxClick = e => {\n        if (node && !node.current.contains(e.target)) {\n            setIsVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleOutsideTitleBoxClick);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleOutsideTitleBoxClick);\n        };\n    }, []);\n\n    return (\n        <nav\n            ref={node}\n            className={`nav ${isVisible ? 'visible': ''}`}\n        >\n            <a href=\"https://acpt.io/documentation\" target=\"_blank\">\n                {useTranslation(\"Documentation\")}\n            </a>\n            <a href=\"https://acpt.io/acpt-dashboard/\" target=\"_blank\">\n                {useTranslation(\"My account\")}\n            </a>\n            <Link to=\"/license\">\n                {useTranslation(\"My license\")}\n            </Link>\n            <a href=\"https://acpt.io/changelog/\" target=\"_blank\">\n                {useTranslation(\"Changelog\")}\n            </a>\n            <a href=\"mailto:info@acpt.io\" target=\"_blank\">\n                {useTranslation(\"Support\")}\n            </a>\n            <a className=\"facebook\" href=\"https://www.facebook.com/groups/880817719861018\" target=\"_blank\">\n                {useTranslation(\"Facebook group\")}\n            </a>\n        </nav>\n    );\n};\n\nexport default HeaderMenu;","import React from 'react';\nimport {Icon} from \"@iconify/react\";\n\nconst LanguagePlaceholder = () => {\n\n    const language = document.globals.language;\n    const availableLanguages = document.globals.available_languages;\n    const languageLabel = availableLanguages.filter((l)=> l.value === language);\n\n    if(languageLabel.length === 0){\n        return null;\n    }\n\n    return (\n        <div className=\"language-placeholder\">\n            <Icon icon=\"ion:language-outline\" width=\"18px\" color=\"#2271b1\" />\n            <span className=\"language-label\">\n                {languageLabel[0].label}\n            </span>\n        </div>\n    );\n};\n\nexport default LanguagePlaceholder;","import React from 'react';\n\nconst Logo = () => {\n\n    const globals = document.globals;\n\n    return (\n        <div className=\"logo\">\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 634 572\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M465.039 115.5L339.505 42.9755C333.314 39.3991 325.686 39.3991 319.495 42.9755L193.961 115.5L319.495 188.024C325.686 191.601 333.314 191.601 339.505 188.024L465.039 115.5ZM359.515 8.34015C340.943 -2.3891 318.057 -2.3891 299.485 8.34015L114 115.5L299.485 222.66C318.057 233.389 340.943 233.389 359.515 222.66L545 115.5L359.515 8.34015Z\" fill=\"#02c39a\"/>\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M520.34 209.498L394.765 281.952C388.572 285.524 384.758 292.131 384.76 299.28L384.801 444.258L510.376 371.805C516.568 368.232 520.383 361.625 520.381 354.476L520.34 209.498ZM374.775 247.305C356.197 258.024 344.754 277.844 344.76 299.292L344.82 513.507L530.366 406.452C548.944 395.733 560.387 375.913 560.381 354.465L560.32 140.25L374.775 247.305Z\" fill=\"#02c39a\"/>\n                <path opacity=\"0.5\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M275.34 444.259L275.381 299.281C275.383 292.131 271.568 285.525 265.376 281.952L139.801 209.498L139.76 354.476C139.758 361.625 143.572 368.232 149.765 371.805L275.34 444.259ZM315.381 299.292C315.387 277.844 303.944 258.024 285.366 247.305L99.8202 140.25L99.7599 354.465C99.7538 375.913 111.197 395.733 129.775 406.452L315.32 513.507L315.381 299.292Z\" fill=\"#02c39a\"/>\n            </svg>\n            <span className=\"label\">\n                    <span className=\"a\">A</span>CPT\n                </span>\n            <span className=\"version\">\n                v {globals.plugin_version}\n            </span>\n        </div>\n    );\n};\n\nexport default Logo;","import React, {useState} from 'react';\nimport {Icon} from \"@iconify/react\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport LanguagePlaceholder from \"./LanguagePlaceholder\";\nimport Logo from \"./Logo\";\n\nconst Header = () => {\n\n    const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n    return (\n        <header className=\"acpt-header\">\n            <Logo/>\n            <div className=\"menu\">\n                <LanguagePlaceholder />\n                <a\n                    href=\"#\"\n                    className=\"menu-link\"\n                    onClick={e => {\n                        e.preventDefault();\n                        setIsMenuVisible(!isMenuVisible);\n                    }}\n                >\n                    <Icon icon=\"bx:bx-menu\" width=\"24px\" />\n                </a>\n                <HeaderMenu\n                    isVisible={isMenuVisible}\n                    setIsVisible={setIsMenuVisible}\n                />\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport Copyright from \"./Copyright\";\n\nconst Layout = ({children}) => {\n    return (\n        <div>\n            <Header/>\n            {children}\n            <Copyright/>\n        </div>\n    );\n};\n\nexport default Layout;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Pagination = ({currentPage, perPage, records}) => {\n\n    const totalPages = Math.ceil( records / perPage );\n    const rows = [];\n    for (let i = 1; i <= totalPages; i++) {\n        rows.push(i);\n    }\n\n    if(rows.length < 2){\n        return <React.Fragment/>;\n    }\n\n    return (\n        <ul className=\"acpt-pagination\">\n            {rows.map((row) => (\n                <li>\n                    {row == currentPage\n                        ?\n                        <span>\n                            {row}\n                        </span>\n                        :\n                        <Link to={`/${row}`}>\n                            {row}\n                        </Link>\n                    }\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Pagination;","import useTranslation from \"../hooks/useTranslation\";\n\n/**\n * This function will be deleted in the v1.0.170\n *\n * Translate a string from locale files\n *\n * @param string\n * @return {*}\n */\nexport const translate = (string, args) => {\n    const lang = 'en';\n    const json = require('./locales/'+lang+'.js').translations;\n    const strings = string.split(\".\");\n    let translation = getTranslatedString(json, strings);\n\n    if(args !== null && typeof args !== 'undefined'){\n        for (const key in args) {\n            translation = translation.replace(\"{{\"+key+\"}}\", args[key]);\n        }\n    }\n\n    return (typeof translation !== 'undefined') ? useTranslation(translation) : string;\n};\n\nconst getTranslatedString = (json, strings) => {\n\n    let object = json;\n\n    strings.map((s)=>{\n        object = object[s];\n    });\n\n    return object;\n};","export const translations = {\n    \"404\": {\n        \"title\": \"Page not found\",\n    },\n    \"create\": {\n        \"title\": \"Register a new Custom Post Type\",\n    },\n    \"edit\": {\n        \"title\": \"Edit a new Custom Post Type\",\n    },\n    \"list\": {\n        \"title\": \"Registered Custom Post Types\",\n    },\n    \"view\": {\n        \"title\": \"Custom Post Type global settings\",\n    },\n    \"taxonomy_list\": {\n        \"title\": \"Registered Taxonomies\"\n    },\n    \"taxonomy_create\": {\n        \"title\": \"Register a new Taxonomy\",\n    },\n    \"taxonomy_edit\": {\n        \"title\": \"Edit a Taxonomy\",\n    },\n    \"taxonomy_view\": {\n        \"title\": \"Taxonomy settings\",\n    },\n    \"general\": {\n        \"labels\": {\n            \"all_items\": \"All {{r}}\",\n            \"add\": \"Add\",\n            \"add_new_item\": \"Add new {{r}}\",\n            \"back_to_items\": \"Back to {{r}}\",\n            \"edit\": \"Edit\",\n            \"new\": \"New\",\n            \"not_found\": \"No {{r}} found\",\n            \"search\": \"Search\",\n            \"view\": \"View\",\n            \"parent_item_colon\":\"Parent item\",\n            \"featured_image\":\"Featured image\",\n            \"set_featured_image\":\"Set featured image\",\n            \"remove_featured_image\":\"Remove featured image\",\n            \"use_featured_image\":\"Use featured image\",\n            \"most_used\": \"Most used {{r}}\",\n            \"archives\":\"Archives\",\n            \"insert_into_item\":\"Insert\",\n            \"uploaded_to_this_item\":\"Upload\",\n            \"filter_items_list\":\"Filter {{r}} list\",\n            \"items_list_navigation\":\"Navigation list {{r}}\",\n            \"items_list\":\"List {{r}}\",\n            \"filter_by_date\":\"Filter by date\",\n            \"item_published\":\"{{r}} published\",\n            \"item_published_privately\":\"{{r}} published privately\",\n            \"item_reverted_to_draft\":\"{{r}} reverted to draft\",\n            \"item_scheduled\":\"{{r}} scheduled\",\n            \"item_updated\":\"{{r}} updated\",\n            \"popular_items\": \"Popular {{r}}\",\n            \"update_item\": \"Update {{r}}\",\n            \"no_terms\": \"No {{r}}\",\n            \"parent_item\": \"Parent {{r}}\",\n            \"new_item_name\": \"New {{r}}\",\n            \"filter_by_item\": \"Filter by {{r}}\",\n            \"separate_items_with_commas\": \"Separate {{r}} with commas\",\n            \"add_or_remove_items\": \"Add or remove {{r}}\",\n            \"choose_from_most_used\": \"Choose from most used {{r}}\",\n            \"search_items\": \"Search {{r}}\",\n        }\n    }\n};","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {deleteTemplateFailure, deleteTemplateInProgress, deleteTemplateSuccess} from \"../actions/deleteTemplateActions\";\n\nexport const deleteTemplate = (belongsTo, find, templateType) => async (dispatch, getState) => {\n    try {\n        dispatch(deleteTemplateInProgress(belongsTo, find, templateType));\n        const res = await wpAjaxRequest('deleteTemplateAction', {belongsTo:belongsTo, find:find, templateType:templateType});\n        (res.success === true) ? dispatch(deleteTemplateSuccess()) : dispatch(deleteTemplateFailure(res.error)) ;\n    } catch ( e ) {\n        dispatch(deleteTemplateFailure(e));\n    }\n};\n","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {\n    fetchTaxonomiesFailure,\n    fetchTaxonomiesInProgress,\n    fetchTaxonomiesSuccess\n} from \"../actions/fetchTaxonomiesActions\";\n\nexport const fetchTaxonomies = (meta) => async (dispatch, getState) => {\n    try {\n        dispatch(fetchTaxonomiesInProgress(meta));\n        const fetched = await wpAjaxRequest('fetchTaxonomiesAction', meta ? meta : {} );\n        dispatch(fetchTaxonomiesSuccess(fetched));\n    } catch ( e ) {\n        dispatch(fetchTaxonomiesFailure(e));\n    }\n};\n","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {\n    fetchTaxonomiesCountFailure,\n    fetchTaxonomiesCountInProgress,\n    fetchTaxonomiesCountSuccess\n} from \"../actions/fetchTaxonomiesCountActions\";\n\nexport const fetchTaxonomiesCount = () => async (dispatch, getState) => {\n    try {\n        dispatch(fetchTaxonomiesCountInProgress());\n        const fetched = await wpAjaxRequest('fetchTaxonomiesCountAction' );\n        dispatch(fetchTaxonomiesCountSuccess(fetched));\n    } catch ( e ) {\n        dispatch(fetchTaxonomiesCountFailure(e));\n    }\n};"],"names":["TaxonomyListElement","id","element","handleDeleteTemplate","enableVisualEditor","modalVisible","setModalVisible","modalTemplateType","setModalTemplateType","exportCodeModalVisible","setExportCodeModalVisible","hasTemplate","templateType","templates","length","matches","map","el","openDeleteModal","metaTypes","TAXONOMY","slug","e","preventDefault","isNative","meta","customPostTypes","postCount","stopPropagation","TaxonomyList","dispatch","state","fetchTaxonomiesReducer","fetched","loading","fetchTaxonomiesCountReducer","fetchedCount","loadingCount","fetchSettingsReducer","settingsLoading","settings","deleteTemplateReducer","deleteTemplateErrors","errors","deleteTemplateSuccess","success","deleteTemplateLoading","page","didMountRef","fetchedSuccess","setFetchedSuccess","perPage","value","totalPages","Math","ceil","history","current","push","toast","error","type","button","label","document","globals","is_rtl","border","CustomPostTypeLabel","isWooCommerce","ShowCode","codeString","maxHeight","overflow","monoBlue","ExportCodeModal","belongsTo","find","codeStrings","setCodeStrings","then","res","catch","console","err","message","wordpress","acpt","ActionsBar","title","actions","secondaryActions","Breadcrumb","link","isLast","Breadcrumbs","crumbs","crumb","index","Copyright","Date","getFullYear","HeaderMenu","isVisible","setIsVisible","node","handleOutsideTitleBoxClick","contains","target","addEventListener","removeEventListener","LanguagePlaceholder","language","availableLanguages","available_languages","languageLabel","filter","l","Logo","plugin_version","Header","isMenuVisible","setIsMenuVisible","Layout","children","Pagination","currentPage","records","rows","i","row","translate","string","args","lang","json","require","translations","strings","split","translation","getTranslatedString","key","replace","object","s","deleteTemplate","getState","fetchTaxonomies","fetchTaxonomiesCount"],"sourceRoot":""}