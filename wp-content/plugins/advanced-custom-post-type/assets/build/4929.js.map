{"version":3,"file":"4929.js","mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,GAAM;;AAEtB;AACA,WACI;AAAA;AAAA;AACI,iCAAC,qBAAD,IAAa,QAAQ,CACjB;AACIC,uBAAO,8BAAe,8BAAf,CADX;AAEIC,sBAAM;AAFV,aADiB,EAKjB;AACID,uBAAO,8BAAe,gBAAf;AADX,aALiB,CAArB,GADJ;AAUI;AAAA;AAAA,cAAI,WAAU,YAAd;AACK,0CAAe,gBAAf;AADL,SAVJ;AAaI;AAAA;AAAA,cAAG,WAAU,+BAAb;AACK,0CAAe,6DAAf;AADL,SAbJ;AAgBI;AAAC,gCAAD;AAAA;AACI,2BAAU,6BADd;AAEI,oBAAG,GAFP;AAGI,qCAAC,YAAD,IAAM,MAAK,oBAAX,GAHJ;AAIK,0CAAe,qBAAf;AAJL;AAhBJ,KADJ;AAyBH,CA5BD;;qBA8BeD;;;;;;;;;;;;;ACpCf;;;;AACA;;AACA;;;;AAEA,IAAMG,aAAa,SAAbA,UAAa,OAA2B;AAAA,QAAzBF,KAAyB,QAAzBA,KAAyB;AAAA,QAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,QAAZE,MAAY,QAAZA,MAAY;;;AAE1C,WACI;AAAC,uBAAD,CAAO,QAAP;AAAA;AACI;AAAA;AAAA,cAAI,WAAWA,SAAS,SAAT,GAAqB,EAApC;AACKF,mBACG;AAAC,oCAAD;AAAA,kBAAM,IAAIA,IAAV;AACKD;AADL,aADH,GAKGA;AANR,SADJ;AAUK,SAACG,MAAD,IACG;AAAA;AAAA,cAAM,WAAU,WAAhB;AACI,qCAAC,YAAD,IAAM,MAAK,qBAAX,EAAiC,OAAM,MAAvC,EAA8C,OAAM,MAApD;AADJ;AAXR,KADJ;AAkBH,CApBD;;qBAsBeD;;;;;;;;;;;;;AC1Bf;;;;AACA;;;;;;AAEA,IAAME,cAAc,SAAdA,WAAc,OAAc;AAAA,QAAZC,MAAY,QAAZA,MAAY;;AAC9B,WACI;AAAA;AAAA,UAAK,kCAA+BC,SAASC,OAAT,CAAiBC,MAAjB,KAA4B,IAA5B,aAA/B,CAAL;AACKH,eAAOI,MAAP,GAAgB,CAAhB,IACG;AAAA;AAAA;AACKJ,mBAAOK,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,uBACR,yBAAC,oBAAD;AACI,2BAAOD,MAAMX,KADjB;AAEI,0BAAMW,MAAMV,IAFhB;AAGI,4BAASW,QAAM,CAAP,KAAcP,OAAOI,MAHjC;AAII,yBAAKG;AAJT,kBADQ;AAAA,aAAX;AADL;AAFR,KADJ;AAgBH,CAjBD;;qBAmBeR","sources":["webpack://advanced-custom-post-type/./assets/src/App/components/pages/404/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Breadcrumbs/Breadcrumb.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Breadcrumbs/index.js"],"sourcesContent":["import React from 'react';\nimport Breadcrumbs from \"../../reusable/Layout/Breadcrumbs\";\nimport {Link} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst NotFound404 = () => {\n\n    // manage local state\n    return (\n        <div>\n            <Breadcrumbs crumbs={[\n                {\n                    label: useTranslation(\"Registered Custom Post Types\"),\n                    link: \"/\"\n                },\n                {\n                    label: useTranslation(\"Page not found\")\n                }\n            ]} />\n            <h1 className=\"acpt-title\">\n                {useTranslation('Page not found')}\n            </h1>\n            <p className=\"acpt-alert acpt-alert-warning\">\n                {useTranslation('The requested page was not found, was deleted or was moved!')}\n            </p>\n            <Link\n                className=\"acpt-btn acpt-btn-primary-o\"\n                to=\"/\">\n                <Icon icon=\"bx:bx-category-alt\" />\n                {useTranslation('Return back to list')}\n            </Link>\n        </div>\n    );\n};\n\nexport default NotFound404;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\n\nconst Breadcrumb = ({label, link, isLast}) => {\n\n    return (\n        <React.Fragment>\n            <li className={isLast ? 'current' : ''}>\n                {link ?\n                    <Link to={link}>\n                        {label}\n                    </Link>\n                    :\n                    label\n                }\n            </li>\n            {!isLast && (\n                <span className=\"separator\">\n                    <Icon icon=\"bx:bx-chevron-right\" color=\"#aaa\" width=\"18px\" />\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Breadcrumb;","import React from 'react';\nimport Breadcrumb from \"./Breadcrumb\";\n\nconst Breadcrumbs = ({crumbs}) => {\n    return (\n        <div className={`acpt-breadcrumbs ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n            {crumbs.length > 0 && (\n                <ul>\n                    {crumbs.map((crumb, index) => (\n                        <Breadcrumb\n                            label={crumb.label}\n                            link={crumb.link}\n                            isLast={(index+1) === crumbs.length}\n                            key={index}\n                        />\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Breadcrumbs;"],"names":["NotFound404","label","link","Breadcrumb","isLast","Breadcrumbs","crumbs","document","globals","is_rtl","length","map","crumb","index"],"sourceRoot":""}