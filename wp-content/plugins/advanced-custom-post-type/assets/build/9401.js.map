{"version":3,"file":"9401.js","mappings":"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","sources":["webpack://advanced-custom-post-type/./assets/src/App/components/pages/OptionPageManage/Modal/DeleteAllModal.js","webpack://advanced-custom-post-type/./assets/src/App/components/pages/OptionPageManage/index.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/deleteAllOptionPages.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/fetchOptionPages.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/optionPagesSubmit.js"],"sourcesContent":["import React from 'react';\nimport Modal from \"../../../reusable/Modal\";\nimport useTranslation from \"../../../../hooks/useTranslation\";\n\nconst DeleteAllModal = ({ modalVisible, setModalVisible, handleDeleteAll}) => {\n\n    return (\n        <React.Fragment>\n            <Modal title={useTranslation(\"Confirm deleting all\")} visible={modalVisible}>\n                <p>\n                    {useTranslation(\"Are you sure?\")}\n                </p>\n                <p>\n                    <a\n                        href=\"#\"\n                        className=\"acpt-btn acpt-btn-primary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setModalVisible(!modalVisible);\n                            handleDeleteAll();\n                        }}\n                    >\n                        {useTranslation(\"Yes\")}\n                    </a>\n                    &nbsp;\n                    <a\n                        href=\"#\"\n                        className=\"acpt-btn acpt-btn-primary-o\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setModalVisible(!modalVisible);\n                        }}\n                    >\n                        {useTranslation(\"No\")}\n                    </a>\n                </p>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nexport default DeleteAllModal;","import React, {useEffect, useRef, useState} from 'react';\nimport Layout from \"../../reusable/Layout\";\nimport ActionsBar from \"../../reusable/Layout/ActionsBar\";\nimport {metaTitle} from \"../../../utils/misc\";\nimport Breadcrumbs from \"../../reusable/Layout/Breadcrumbs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchOptionPages} from \"../../../redux/thunks/fetchOptionPages\";\nimport Spinner from \"../../reusable/Loader/Spinner\";\nimport {createPage, setPages, setStatusSaved, showHideAll, switchView} from \"../../../redux/actions/optionPagesManageAction\";\nimport arrayMove from \"array-move\";\nimport MiniNavMap from \"../../reusable/MiniNavMap\";\nimport DeleteAllModal from \"./Modal/DeleteAllModal\";\nimport useUnsavedChangesWarning from \"../../../hooks/useUnsavedChangesWarning\";\nimport {toast} from \"react-toastify\";\nimport {deleteAllOptionPages} from \"../../../redux/thunks/deleteAllOptionPages\";\nimport {optionPagesSubmit} from \"../../../redux/thunks/optionPagesSubmit\";\nimport useTranslation from \"../../../hooks/useTranslation\";\nimport Tippy from \"../../reusable/Tippy\";\nimport {Icon} from \"@iconify/react\";\nimport {VerticalSortableList} from \"../../reusable/Sortable/VerticalSortableList\";\nimport {HorizontalSortableList} from \"../../reusable/Sortable/HorizontalSortableList\";\nimport AddOptionPageTabButton from \"./OptionPageTabButton/AddOptionPageTabButton\";\nimport OptionPageItem from \"./OptionPageItem\";\n\nconst OptionPageManage = () => {\n\n    // manage global state\n    const dispatch = useDispatch();\n    const {fetched, loading} = useSelector(state => state.fetchOptionPagesReducer);\n    const {pages, pageTabs, currentPageTab, isSaved, isValid, loading: saveLoading, errors: saveErrors, values, success, view} = useSelector(state => state.optionPagesManageReducer);\n\n    const pagesBlocks = pages.filter((page) => {\n        return (typeof page.props.parentId === 'undefined');\n    });\n\n    const pageTabsBlocks = pageTabs.filter((pageTab) => {\n\n        if(typeof pageTab === 'undefined'){\n            return false;\n        }\n\n        return (typeof pageTab.props.parentId === 'undefined' || !pageTab.props.parentId);\n    });\n\n    // manage local state\n    const didMountRef = useRef(false);\n    const [Prompt, setDirty, setPristine] = useUnsavedChangesWarning();\n    const [deleteAllModalVisible, setDeleteAllModalVisible] = useState(false);\n\n    // show hide all fields handlers\n    const showHideAllPages = () => {\n        dispatch(showHideAll());\n    };\n\n    // switch view handler\n    const handleSwitchView = (view) => {\n        localStorage.setItem(`META_SWITCH_VIEW_OPTION_PAGES`, view);\n        dispatch(switchView(view));\n    };\n\n    // set saved switch view\n    useEffect(() => {\n\n        // get the default view\n        const getDefaultView = () => {\n            if(localStorage.getItem(`META_SWITCH_VIEW_OPTION_PAGES`)){\n                return localStorage.getItem(`META_SWITCH_VIEW_OPTION_PAGES`);\n            }\n\n            return 'list';\n        };\n\n        dispatch(switchView(getDefaultView()));\n    }, []);\n\n    /**\n     *\n     * @return {null|*}\n     */\n    const currentPage = () => {\n\n        let currentTab = [];\n\n        pages.map((page) => {\n            currentPageTab.map((tab) => {\n                if(\n                    page.props.id === tab.id &&\n                    typeof page.props.parentId === 'undefined'\n                ){\n                    currentTab.push(page);\n                }\n            });\n        });\n\n        if(currentTab.length === 1){\n            const props = currentTab[0].props;\n\n            return (\n                <OptionPageItem\n                    forTabView={true}\n                    id={props.id}\n                    isClosed={props.isClosed}\n                    isSaved={props.isSaved}\n                    position={props.position}\n                />\n            );\n        }\n\n        return null;\n    };\n\n    // set page meta title\n    useEffect(() => {\n        metaTitle(`ACPT - ${useTranslation(\"Manage option pages\")}${isSaved ? '' : '*'}`);\n        if(!isSaved){ setDirty(); }\n    }, [isSaved]);\n\n    useEffect(() => {\n        dispatch(fetchOptionPages({}));\n    }, [saveLoading]);\n\n    // handle fetch outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!saveLoading){\n                if(success){\n                    setPristine();\n                    toast.success(useTranslation(\"Option pages successfully saved\"));\n                }\n\n                if(saveErrors.length > 0){\n                    saveErrors.map((error) => {\n                        toast.error(error);\n                    });\n                }\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [saveLoading]);\n\n    // sortable\n    const onSortEnd = ({oldIndex, newIndex}) => {\n\n        let sortedBlocks = arrayMove(pages.filter(page => typeof page.props.parentId === 'undefined'), oldIndex, newIndex);\n\n        sortedBlocks.map((sortedBlock)=>{\n            const childrenBlocks = pages.filter(page => page.props.parentId === sortedBlock.props.id);\n\n            childrenBlocks.map((childrenBlock)=>{\n                sortedBlocks.push(childrenBlock);\n            });\n        });\n\n        dispatch(setPages(sortedBlocks));\n    };\n\n    // handle data submit\n    const handleSubmit = () => {\n        dispatch(optionPagesSubmit(values));\n        dispatch(setStatusSaved());\n        setPristine();\n    };\n\n    // handle delete all\n    const handleDeleteAll = () => {\n        dispatch(deleteAllOptionPages());\n        dispatch(setStatusSaved());\n        setPristine();\n    };\n\n    if(loading){\n        return <Spinner/>;\n    }\n\n    const renderDeleteButton = (\n        <React.Fragment>\n            <DeleteAllModal\n                modalVisible={deleteAllModalVisible}\n                setModalVisible={setDeleteAllModalVisible}\n                handleDeleteAll={handleDeleteAll}\n            />\n            <button\n                onClick={(e) => {\n                    e.preventDefault();\n                    setDeleteAllModalVisible(!deleteAllModalVisible);\n                }}\n                type=\"submit\"\n                className=\"acpt-btn acpt-btn-danger\"\n            >\n                {useTranslation(\"Delete all\")}\n            </button>\n        </React.Fragment>\n    );\n\n    const buttons = (\n        <React.Fragment>\n            <button\n                onClick={ (e) => {\n                    e.preventDefault();\n                    dispatch(createPage());\n                } }\n                className=\"acpt-btn acpt-btn-primary-o\"\n            >\n                {useTranslation(\"Add page\")}\n            </button>\n            {pagesBlocks.length > 0\n                ? (\n                <React.Fragment>\n                    <button\n                        disabled={!isValid}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            handleSubmit();\n                        }}\n                        type=\"submit\"\n                        className=\"acpt-btn acpt-btn-primary\"\n                    >\n                        {useTranslation(\"Save\")}\n                    </button>\n                    {renderDeleteButton}\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    {fetched.length > 0 && renderDeleteButton}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Layout>\n            <ActionsBar\n                title={useTranslation(\"Option pages\")}\n                actions={buttons}\n            />\n            <main>\n                <Breadcrumbs crumbs={[\n                    {\n                        label: useTranslation(\"Option pages\"),\n                        link: \"/option-pages\"\n                    },\n                    {\n                        label: useTranslation(\"Manage option pages\")\n                    }\n                ]} />\n                {Prompt}\n                {pagesBlocks.length > 0 ? (\n                    <React.Fragment>\n                        <div className=\"acpt-meta-wrapper\">\n                            <MiniNavMap values={values} />\n                            <div className=\"acpt-meta-list-wrapper\">\n                                <div className=\"space-between mb-3 flex-center\">\n                                    <div className=\"acpt-meta-view-switcher\">\n                                        <Tippy title={useTranslation(\"List view\")}>\n                                            <a\n                                                href=\"#\"\n                                                onClick={e => {\n                                                    e.preventDefault();\n                                                    handleSwitchView(\"list\");\n                                                }}\n                                                className={view === 'list' ? 'active' : ''}\n                                            >\n                                                <Icon icon=\"bx:list-ul\" width=\"18px\" />\n                                            </a>\n                                        </Tippy>\n                                        <Tippy title={useTranslation(\"Tabular view\")}>\n                                            <a\n                                                href=\"#\"\n                                                onClick={e => {\n                                                    e.preventDefault();\n                                                    handleSwitchView(\"tabular\");\n                                                }}\n                                                className={view === 'tabular' ? 'active' : ''}\n                                                title={useTranslation(\"Tabular view\")}\n                                            >\n                                                <Icon icon=\"bx:table\" width=\"18px\" />\n                                            </a>\n                                        </Tippy>\n                                    </div>\n                                    {view === 'list' && (\n                                        <a\n                                            href=\"#\"\n                                            onClick={(e)=>{\n                                                e.preventDefault();\n                                                showHideAllPages();\n                                            }}\n                                        >\n                                            {useTranslation(\"Show/hide all pages\")}\n                                        </a>\n                                    )}\n                                </div>\n                                {view === 'tabular' ? (\n                                    <div className=\"acpt-op-horizontal-wrapper\">\n                                        <HorizontalSortableList\n                                            items={pageTabsBlocks}\n                                            externalComponent={<AddOptionPageTabButton  />}\n                                            onSortEnd={onSortEnd}\n                                            useDragHandle\n                                            axis=\"x\"\n                                            helperClass=\"dragging-helper-class\"\n                                            disableAutoscroll={false}\n                                            useWindowAsScrollContainer={true}\n                                        />\n                                        <div className=\"mt-2\">\n                                            {currentPage()}\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <VerticalSortableList\n                                        items={pagesBlocks}\n                                        onSortEnd={onSortEnd}\n                                        useDragHandle\n                                        lockAxis=\"y\"\n                                        helperClass=\"dragging-helper-class\"\n                                        disableAutoscroll={false}\n                                        useWindowAsScrollContainer={true}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <div className=\"acpt-alert acpt-alert-warning\">\n                            {useTranslation('No page already created. Create the first one now by clicking the button \"Add page\"!')}\n                        </div>\n                    </React.Fragment>\n                )}\n            </main>\n        </Layout>\n    );\n};\n\nexport default OptionPageManage;","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {deleteAllFailure, deleteAllInProgress, deleteAllSuccess} from \"../actions/optionPagesManageAction\";\n\nexport const deleteAllOptionPages = () => async (dispatch, getState) => {\n    try {\n        dispatch(deleteAllInProgress());\n        const res = await wpAjaxRequest(\"deleteOptionPagesAction\", {});\n        (res.success === true) ? dispatch(deleteAllSuccess()) : dispatch(deleteAllFailure(res.error)) ;\n    } catch (e) {\n        console.error(e);\n        dispatch(deleteAllFailure(e));\n    }\n};","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {\n    fetchOptionPagesFailure,\n    fetchOptionPagesInProgress,\n    fetchOptionPagesSuccess\n} from \"../actions/fetchOptionPagesActions\";\nimport {hydrateValues} from \"../actions/optionPagesManageAction\";\n\nexport const fetchOptionPages = (data) => async (dispatch, getState) => {\n    try {\n        const postData = data ? {page:data.page, perPage:data.perPage} : {};\n        dispatch(fetchOptionPagesInProgress());\n        const fetched = await wpAjaxRequest('fetchOptionPagesAction', postData);\n        dispatch(fetchOptionPagesSuccess(fetched));\n        dispatch(hydrateValues(fetched));\n    } catch ( e ) {\n        dispatch(fetchOptionPagesFailure(e));\n    }\n};","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {submitFailure, submitInProgress, submitSuccess} from \"../actions/optionPagesManageAction\";\n\nexport const optionPagesSubmit = (data) => async (dispatch, getState) => {\n    try {\n        dispatch(submitInProgress());\n        const res = await wpAjaxRequest(\"saveOptionPagesAction\", data);\n        (res.success === true) ? dispatch(submitSuccess()) : dispatch(submitFailure(res.error)) ;\n    } catch (e) {\n        console.log(e);\n        dispatch(submitFailure(e));\n    }\n};"],"names":["DeleteAllModal","modalVisible","setModalVisible","handleDeleteAll","e","preventDefault","OptionPageManage","dispatch","state","fetchOptionPagesReducer","fetched","loading","optionPagesManageReducer","pages","pageTabs","currentPageTab","isSaved","isValid","saveLoading","saveErrors","errors","values","success","view","pagesBlocks","filter","page","props","parentId","pageTabsBlocks","pageTab","didMountRef","Prompt","setDirty","setPristine","deleteAllModalVisible","setDeleteAllModalVisible","showHideAllPages","handleSwitchView","localStorage","setItem","getDefaultView","getItem","currentPage","currentTab","map","tab","id","push","length","isClosed","position","current","toast","error","onSortEnd","oldIndex","newIndex","sortedBlocks","sortedBlock","childrenBlocks","childrenBlock","handleSubmit","renderDeleteButton","buttons","label","link","deleteAllOptionPages","getState","res","console","fetchOptionPages","data","postData","perPage","optionPagesSubmit","log"],"sourceRoot":""}