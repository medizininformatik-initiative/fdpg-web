{"version":3,"file":"9969.js","mappings":"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","sources":["webpack://advanced-custom-post-type/./assets/src/App/components/pages/TemplateList/CreateTemplateModal.js","webpack://advanced-custom-post-type/./assets/src/App/components/pages/TemplateList/TemplateListElement.js","webpack://advanced-custom-post-type/./assets/src/App/components/pages/TemplateList/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/ActionsBar/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Breadcrumbs/Breadcrumb.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Breadcrumbs/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Copyright/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/HeaderMenu.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/LanguagePlaceholder.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/Logo.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/Header/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Layout/index.js","webpack://advanced-custom-post-type/./assets/src/App/components/reusable/Pagination/index.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/deleteTemplate.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/fetchTemplates.js","webpack://advanced-custom-post-type/./assets/src/App/redux/thunks/fetchTemplatesCount.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Modal from \"../../reusable/Modal\";\nimport {useForm} from \"react-hook-form\";\nimport ReactSelect from \"../../reusable/Form/ReactSelect\";\nimport {metaTypes} from \"../../../constants/metaTypes\";\nimport {wpAjaxRequest} from \"../../../utils/ajax\";\nimport {useHistory} from \"react-router-dom\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst CreateTemplateModal = ({modalVisible, setModalVisible, savedTemplates}) => {\n\n    // manage redirect\n    const history = useHistory();\n\n    // manage local state\n    const [findOptions, setFindOptions] = useState([]);\n    const [templateTypeOptions, setTemplateTypeOptions] = useState([]);\n\n    // handle form\n    const { control, register, handleSubmit, formState: {errors, isValid}, watch } = useForm({\n        mode: 'all',\n    });\n\n    const belongsTo = watch('belongsTo');\n    const find = watch('find');\n\n    useEffect(() => {\n        if(modalVisible === true){\n            wpAjaxRequest(\"fetchElementsAction\", {belongsTo: belongsTo.value})\n                .then(res => {\n                    setFindOptions(res);\n                })\n                .catch(err => {\n                    console.error(err.message);\n                })\n            ;\n        }\n    }, [belongsTo]);\n\n    useEffect(() => {\n\n        if(savedTemplates && find && belongsTo){\n            const templatesAlreadyCreated = savedTemplates.filter((template)=>{\n                return template.belongsTo === belongsTo.value && template.find === find.value;\n            });\n\n            let newTemplateTypeOptions = [];\n\n            if(belongsTo.value === metaTypes.CUSTOM_POST_TYPE){\n                const checkArchiveTemplate = templatesAlreadyCreated.filter(t => t.templateType === 'archive');\n                const checkSingleTemplate = templatesAlreadyCreated.filter(t => t.templateType === 'single');\n                const checkRelatedTemplate = templatesAlreadyCreated.filter(t => t.templateType === 'related');\n                const isNative = find.value === 'post' || find.value === 'page';\n\n                if(!isNative && checkArchiveTemplate.length === 0){ newTemplateTypeOptions.push({label:'Archive', value: 'archive'});}\n                if(!isNative && checkSingleTemplate.length === 0){ newTemplateTypeOptions.push({label:'Single', value: 'single'});}\n                if(checkRelatedTemplate.length === 0){ newTemplateTypeOptions.push({label:'Related', value: 'related'});}\n            }\n\n            if(belongsTo.value === metaTypes.TAXONOMY){\n                const checkSingleTemplate = templatesAlreadyCreated.filter(t => t.templateType === 'single');\n\n                if(checkSingleTemplate.length === 0){ newTemplateTypeOptions.push({label:'Single', value: 'single'});}\n            }\n\n            setTemplateTypeOptions(newTemplateTypeOptions);\n        }\n    }, [find]);\n\n    const onSubmit = (data) => {\n        history.push(`/template/${data.belongsTo.value}/${data.templateType.value}/${data.find.value}/?refer=templates`);\n    };\n\n    return (\n        <Modal title={useTranslation(\"Create template\")} visible={modalVisible}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"text-left\">\n                    <p>\n                        {useTranslation(\"Which does this template belong to?\")}\n                    </p>\n                    <ReactSelect\n                        id={`belongsTo`}\n                        placeholder={useTranslation(\"Which does this template belong to?\")}\n                        control={control}\n                        defaultValue={null}\n                        values={[\n                            {label:useTranslation('Custom post type'), value: metaTypes.CUSTOM_POST_TYPE},\n                            {label:useTranslation('Taxonomy'), value: metaTypes.TAXONOMY},\n                        ]}\n                        isRequired={true}\n                        validate={{\n                            required: useTranslation(\"This field is mandatory\")\n                        }}\n                    />\n                    <p>\n                        {useTranslation(\"Select the element from the list:\")}\n                    </p>\n                    <ReactSelect\n                        id={`find`}\n                        placeholder={useTranslation(\"Choose from the list\")}\n                        control={control}\n                        defaultValue={null}\n                        values={findOptions}\n                        isRequired={true}\n                        disabled={true}\n                        validate={{\n                            required: useTranslation(\"This field is mandatory\")\n                        }}\n                    />\n                    <p>\n                        {useTranslation(\"Select the template type:\")}\n                    </p>\n                    <ReactSelect\n                        id={`templateType`}\n                        placeholder={useTranslation(\"Choose from the list\")}\n                        control={control}\n                        defaultValue={null}\n                        values={templateTypeOptions}\n                        isRequired={true}\n                        disabled={true}\n                        validate={{\n                            required: useTranslation(\"This field is mandatory\")\n                        }}\n                    />\n                    <p className=\"acpt-buttons\">\n                        <button\n                            type=\"submit\"\n                            className=\"acpt-btn acpt-btn-primary\"\n                            disabled={!isValid}\n                        >\n                            {useTranslation(\"Create template\")}\n                        </button>\n                        <a\n                            href=\"#\"\n                            className=\"acpt-btn acpt-btn-primary-o\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                setModalVisible(false);\n                            }}\n                        >\n                            {useTranslation(\"Close\")}\n                        </a>\n                    </p>\n\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default CreateTemplateModal;","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Modal from \"../../reusable/Modal\";\nimport {metaTypes} from \"../../../constants/metaTypes\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst TemplateListElement = ({id, element, handleDeleteTemplate}) => {\n\n    // manage local state\n    const [modalVisible, setModalVisible] = useState(false);\n\n    // manage redirect\n    const openDeleteModal = () => {\n        setModalVisible(!modalVisible);\n    };\n\n    return(\n        <React.Fragment>\n            <Modal title={useTranslation(\"Confirm deleting this template?\")} visible={modalVisible}>\n                <p>\n                    {useTranslation(\"Are you sure?\")}\n                </p>\n                <p>\n                    <a\n                        href=\"#\"\n                        className=\"acpt-btn acpt-btn-primary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setModalVisible(!modalVisible);\n                            handleDeleteTemplate(element.belongsTo, element.find, element.templateType);\n                        }}\n                    >\n                        {useTranslation(\"Yes\")}\n                    </a>\n                    &nbsp;\n                    <a\n                        href=\"#\"\n                        className=\"acpt-btn acpt-btn-primary-o\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setModalVisible(!modalVisible);\n                        }}\n                    >\n                        {useTranslation(\"No\")}\n                    </a>\n                </p>\n            </Modal>\n            <tr>\n                <td>\n                    {element.belongsTo === metaTypes.CUSTOM_POST_TYPE ? 'custom post type' : element.belongsTo}\n                </td>\n                <td>\n                    {element.find}\n                </td>\n                <td>\n                    {element.templateType}\n                </td>\n                <td>\n                    <Link\n                        to={`${element.link}?refer=templates`}\n                        className=\"acpt-btn no-border acpt-btn-sm acpt-btn-info-o\"\n                    >\n                        {useTranslation(\"Manage\")}\n                    </Link>\n                    <a\n                        onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            openDeleteModal(element.templateType);\n                        }}\n                        className=\"ml-1 acpt-btn no-border acpt-btn-sm acpt-btn-danger-o\"\n                        href=\"#\"\n                    >\n                        {useTranslation(\"Delete\")}\n                    </a>\n                </td>\n            </tr>\n        </React.Fragment>\n    )\n};\n\nexport default TemplateListElement;","import React, {useEffect, useRef, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {filterByLabel} from \"../../../utils/objects\";\nimport {changeCurrentAdminMenuLink, metaTitle} from \"../../../utils/misc\";\nimport {toast} from \"react-toastify\";\nimport {fetchTemplatesCount} from \"../../../redux/thunks/fetchTemplatesCount\";\nimport {fetchTemplates} from \"../../../redux/thunks/fetchTemplates\";\nimport Spinner from \"../../reusable/Loader/Spinner\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Breadcrumbs from \"../../reusable/Layout/Breadcrumbs\";\nimport {Icon} from \"@iconify/react\";\nimport Tippy from \"../../reusable/Tippy\";\nimport TemplateListElement from \"./TemplateListElement\";\nimport {deleteTemplate} from \"../../../redux/thunks/deleteTemplate\";\nimport Pagination from \"../../reusable/Pagination\";\nimport Layout from \"../../reusable/Layout\";\nimport ActionsBar from \"../../reusable/Layout/ActionsBar\";\nimport CreateTemplateModal from \"./CreateTemplateModal\";\nimport useTranslation from \"../../../hooks/useTranslation\";\n\nconst TemplateList = () => {\n\n    // manage global state\n    const dispatch = useDispatch();\n    const {fetched, loading} = useSelector(state => state.fetchTemplatesReducer);\n    const {fetched: fetchedCount, loading:loadingCount} = useSelector(state => state.fetchTemplatesCountReducer);\n    const {loading: settingsLoading, fetched: settings} = useSelector(state => state.fetchSettingsReducer);\n    const {errors: deleteTemplateErrors, success: deleteTemplateSuccess, loading: deleteTemplateLoading} = useSelector(state => state.deleteTemplateReducer);\n\n    // manage local state\n    const {page} = useParams();\n    const didMountRef = useRef(false);\n    const [fetchedSuccess, setFetchedSuccess] = useState(null);\n    const [modalTemplateVisible, setModalTemplateVisible] = useState(false);\n    const perPage = (settings.length > 0 && filterByLabel(settings, 'key', 'records_per_page') !== '') ? filterByLabel(settings, 'key', 'records_per_page').value : 20;\n    const totalPages = Math.ceil( fetchedCount / perPage );\n\n    useEffect(() => {\n        metaTitle(useTranslation(\"Template list\"));\n        changeCurrentAdminMenuLink('#/templates');\n        dispatch(fetchTemplatesCount());\n        dispatch(fetchTemplates({\n            page: page ? page : 1,\n            perPage: perPage\n        }));\n    }, [page]);\n\n    // handle fetch outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!loading && !settingsLoading){\n                setFetchedSuccess(true);\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [loading]);\n\n    // handle delete template outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!deleteTemplateLoading){\n                if(deleteTemplateSuccess){\n                    toast.success(useTranslation(\"Template was successfully deleted.\"));\n                    dispatch(fetchTemplates({\n                        page: page ? page : 1,\n                        perPage: perPage\n                    }));\n                }\n\n                if(deleteTemplateErrors.length > 0){\n                    deleteTemplateErrors.map((error) => {\n                        toast.error(error);\n                    });\n                }\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [deleteTemplateLoading]);\n\n    const handleDeleteTemplate = (name, type, templateType) => {\n        dispatch(deleteTemplate(name, type, templateType));\n    };\n\n    if(!fetchedSuccess){\n        return <Spinner/>;\n    }\n\n    const button = (\n        <React.Fragment>\n            <CreateTemplateModal\n                setModalVisible={setModalTemplateVisible}\n                modalVisible={modalTemplateVisible}\n                savedTemplates={fetched}\n            />\n            <a\n                href=\"#\"\n                className=\"acpt-btn acpt-btn-primary\"\n                onClick={e => {\n                    e.preventDefault();\n                    setModalTemplateVisible(!modalTemplateVisible);\n                }}\n            >\n                {useTranslation(\"Create template\")}\n            </a>\n        </React.Fragment>\n    );\n    \n    return (\n        <Layout>\n            <ActionsBar\n                title={useTranslation(\"Template list\")}\n                actions={button}\n            />\n            <main>\n                <Breadcrumbs crumbs={[\n                    {\n                        label: useTranslation(\"Registered Custom Post Types\"),\n                        link: \"/\"\n                    },\n                    {\n                        label: useTranslation(\"Template list\")\n                    }\n                ]} />\n                {fetched.length > 0 ?\n                    <div className=\"acpt-card\">\n                        <div className=\"acpt-card__header\">\n                            <div className=\"acpt-card__inner\">\n                                {fetchedCount} {useTranslation(\"record(s) found\")}\n                            </div>\n                        </div>\n                        <div className=\"acpt-card__body\">\n                            <div className=\"acpt-table-responsive\">\n                                <table className={`acpt-table ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n                                    <thead>\n                                    <tr>\n                                        <th>\n                                            {useTranslation(\"Belongs to\")}\n                                            &nbsp;\n                                            <Tippy title={useTranslation(\"Possible values: customPostType, taxonomy.\")}>\n                                                <span className=\"helper\">\n                                                    <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n                                                </span>\n                                            </Tippy>\n                                        </th>\n                                        <th>\n                                            {useTranslation(\"Element\")}\n                                            &nbsp;\n                                            <Tippy title={useTranslation(\"The custom post type or taxonomy element.\")}>\n                                                <span className=\"helper\">\n                                                    <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n                                                </span>\n                                            </Tippy>\n                                        </th>\n                                        <th>\n                                            {useTranslation(\"Template\")}\n                                            &nbsp;\n                                            <Tippy title={useTranslation(\"The template type. Possible values: archive, single, related, metaField.\")}>\n                                                <span className=\"helper\">\n                                                    <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n                                                </span>\n                                            </Tippy>\n                                        </th>\n                                        <th>\n                                            {useTranslation(\"Actions\")}\n                                        </th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {fetched.map((element) => <TemplateListElement id={element.id} key={element.id} element={element} handleDeleteTemplate={handleDeleteTemplate} />)}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        {totalPages > 1 && (\n                            <div className=\"acpt-card__footer\" style={{border: \"none\"}}>\n                                <div className=\"acpt-card__inner\">\n                                    <Pagination currentPage={page ? page : 1} perPage={perPage} records={fetchedCount}/>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    :\n                    <div className=\"acpt-alert acpt-alert-warning\">\n                        {useTranslation(\"No templates found.\")}\n                    </div>\n                }\n            </main>\n        </Layout>\n    );\n};\n\nexport default TemplateList;","import React from \"react\";\n\nconst ActionsBar = ({title, actions, secondaryActions}) => {\n\n    return (\n        <div className=\"actions-bar\">\n            <div className=\"title\">\n                <h1>\n                    {title}\n                </h1>\n            </div>\n            {secondaryActions && (\n                <div className={`secondary-actions ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n                    {secondaryActions}\n                </div>\n            )}\n            <div className={`actions ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n                {actions}\n            </div>\n        </div>\n    );\n};\n\nexport default ActionsBar;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\n\nconst Breadcrumb = ({label, link, isLast}) => {\n\n    return (\n        <React.Fragment>\n            <li className={isLast ? 'current' : ''}>\n                {link ?\n                    <Link to={link}>\n                        {label}\n                    </Link>\n                    :\n                    label\n                }\n            </li>\n            {!isLast && (\n                <span className=\"separator\">\n                    <Icon icon=\"bx:bx-chevron-right\" color=\"#aaa\" width=\"18px\" />\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Breadcrumb;","import React from 'react';\nimport Breadcrumb from \"./Breadcrumb\";\n\nconst Breadcrumbs = ({crumbs}) => {\n    return (\n        <div className={`acpt-breadcrumbs ${document.globals.is_rtl === true ? `rtl` : ``}`}>\n            {crumbs.length > 0 && (\n                <ul>\n                    {crumbs.map((crumb, index) => (\n                        <Breadcrumb\n                            label={crumb.label}\n                            link={crumb.link}\n                            isLast={(index+1) === crumbs.length}\n                            key={index}\n                        />\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import React from 'react';\nimport useTranslation from \"../../../../hooks/useTranslation\";\n\nconst Copyright = () => {\n    return (\n        <div className=\"acpt-copyright\">\n            <span>\n                {useTranslation(\"Copyright\")} &copy; 2021 - {new Date().getFullYear()} &nbsp;\n                <a href=\"https://acpt.io\" target=\"_blank\">ACPT</a>\n            </span>\n        </div>\n    );\n};\n\nexport default Copyright;","import React, {useEffect, useRef} from 'react';\nimport {Link} from \"react-router-dom\";\nimport useTranslation from \"../../../../hooks/useTranslation\";\n\nconst HeaderMenu = ({isVisible, setIsVisible}) => {\n\n    const node = useRef();\n    const handleOutsideTitleBoxClick = e => {\n        if (node && !node.current.contains(e.target)) {\n            setIsVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleOutsideTitleBoxClick);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleOutsideTitleBoxClick);\n        };\n    }, []);\n\n    return (\n        <nav\n            ref={node}\n            className={`nav ${isVisible ? 'visible': ''}`}\n        >\n            <a href=\"https://acpt.io/documentation\" target=\"_blank\">\n                {useTranslation(\"Documentation\")}\n            </a>\n            <a href=\"https://acpt.io/acpt-dashboard/\" target=\"_blank\">\n                {useTranslation(\"My account\")}\n            </a>\n            <Link to=\"/license\">\n                {useTranslation(\"My license\")}\n            </Link>\n            <a href=\"https://acpt.io/changelog/\" target=\"_blank\">\n                {useTranslation(\"Changelog\")}\n            </a>\n            <a href=\"mailto:info@acpt.io\" target=\"_blank\">\n                {useTranslation(\"Support\")}\n            </a>\n            <a className=\"facebook\" href=\"https://www.facebook.com/groups/880817719861018\" target=\"_blank\">\n                {useTranslation(\"Facebook group\")}\n            </a>\n        </nav>\n    );\n};\n\nexport default HeaderMenu;","import React from 'react';\nimport {Icon} from \"@iconify/react\";\n\nconst LanguagePlaceholder = () => {\n\n    const language = document.globals.language;\n    const availableLanguages = document.globals.available_languages;\n    const languageLabel = availableLanguages.filter((l)=> l.value === language);\n\n    if(languageLabel.length === 0){\n        return null;\n    }\n\n    return (\n        <div className=\"language-placeholder\">\n            <Icon icon=\"ion:language-outline\" width=\"18px\" color=\"#2271b1\" />\n            <span className=\"language-label\">\n                {languageLabel[0].label}\n            </span>\n        </div>\n    );\n};\n\nexport default LanguagePlaceholder;","import React from 'react';\n\nconst Logo = () => {\n\n    const globals = document.globals;\n\n    return (\n        <div className=\"logo\">\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 634 572\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M465.039 115.5L339.505 42.9755C333.314 39.3991 325.686 39.3991 319.495 42.9755L193.961 115.5L319.495 188.024C325.686 191.601 333.314 191.601 339.505 188.024L465.039 115.5ZM359.515 8.34015C340.943 -2.3891 318.057 -2.3891 299.485 8.34015L114 115.5L299.485 222.66C318.057 233.389 340.943 233.389 359.515 222.66L545 115.5L359.515 8.34015Z\" fill=\"#02c39a\"/>\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M520.34 209.498L394.765 281.952C388.572 285.524 384.758 292.131 384.76 299.28L384.801 444.258L510.376 371.805C516.568 368.232 520.383 361.625 520.381 354.476L520.34 209.498ZM374.775 247.305C356.197 258.024 344.754 277.844 344.76 299.292L344.82 513.507L530.366 406.452C548.944 395.733 560.387 375.913 560.381 354.465L560.32 140.25L374.775 247.305Z\" fill=\"#02c39a\"/>\n                <path opacity=\"0.5\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M275.34 444.259L275.381 299.281C275.383 292.131 271.568 285.525 265.376 281.952L139.801 209.498L139.76 354.476C139.758 361.625 143.572 368.232 149.765 371.805L275.34 444.259ZM315.381 299.292C315.387 277.844 303.944 258.024 285.366 247.305L99.8202 140.25L99.7599 354.465C99.7538 375.913 111.197 395.733 129.775 406.452L315.32 513.507L315.381 299.292Z\" fill=\"#02c39a\"/>\n            </svg>\n            <span className=\"label\">\n                    <span className=\"a\">A</span>CPT\n                </span>\n            <span className=\"version\">\n                v {globals.plugin_version}\n            </span>\n        </div>\n    );\n};\n\nexport default Logo;","import React, {useState} from 'react';\nimport {Icon} from \"@iconify/react\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport LanguagePlaceholder from \"./LanguagePlaceholder\";\nimport Logo from \"./Logo\";\n\nconst Header = () => {\n\n    const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n    return (\n        <header className=\"acpt-header\">\n            <Logo/>\n            <div className=\"menu\">\n                <LanguagePlaceholder />\n                <a\n                    href=\"#\"\n                    className=\"menu-link\"\n                    onClick={e => {\n                        e.preventDefault();\n                        setIsMenuVisible(!isMenuVisible);\n                    }}\n                >\n                    <Icon icon=\"bx:bx-menu\" width=\"24px\" />\n                </a>\n                <HeaderMenu\n                    isVisible={isMenuVisible}\n                    setIsVisible={setIsMenuVisible}\n                />\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport Copyright from \"./Copyright\";\n\nconst Layout = ({children}) => {\n    return (\n        <div>\n            <Header/>\n            {children}\n            <Copyright/>\n        </div>\n    );\n};\n\nexport default Layout;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Pagination = ({currentPage, perPage, records}) => {\n\n    const totalPages = Math.ceil( records / perPage );\n    const rows = [];\n    for (let i = 1; i <= totalPages; i++) {\n        rows.push(i);\n    }\n\n    if(rows.length < 2){\n        return <React.Fragment/>;\n    }\n\n    return (\n        <ul className=\"acpt-pagination\">\n            {rows.map((row) => (\n                <li>\n                    {row == currentPage\n                        ?\n                        <span>\n                            {row}\n                        </span>\n                        :\n                        <Link to={`/${row}`}>\n                            {row}\n                        </Link>\n                    }\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Pagination;","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {deleteTemplateFailure, deleteTemplateInProgress, deleteTemplateSuccess} from \"../actions/deleteTemplateActions\";\n\nexport const deleteTemplate = (belongsTo, find, templateType) => async (dispatch, getState) => {\n    try {\n        dispatch(deleteTemplateInProgress(belongsTo, find, templateType));\n        const res = await wpAjaxRequest('deleteTemplateAction', {belongsTo:belongsTo, find:find, templateType:templateType});\n        (res.success === true) ? dispatch(deleteTemplateSuccess()) : dispatch(deleteTemplateFailure(res.error)) ;\n    } catch ( e ) {\n        dispatch(deleteTemplateFailure(e));\n    }\n};\n","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {fetchTemplatesFailure, fetchTemplatesInProgress, fetchTemplatesSuccess} from \"../actions/fetchTemplatesActions\";\n\nexport const fetchTemplates = (meta) => async (dispatch, getState) => {\n    try {\n        dispatch(fetchTemplatesInProgress(meta));\n        const fetched = await wpAjaxRequest('fetchTemplatesAction', meta ? meta : {} );\n        dispatch(fetchTemplatesSuccess(fetched));\n    } catch ( e ) {\n        dispatch(fetchTemplatesFailure(e));\n    }\n};\n","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {\n    fetchTemplatesCountFailure,\n    fetchTemplatesCountInProgress,\n    fetchTemplatesCountSuccess\n} from \"../actions/fetchTemplatesCountActions\";\n\nexport const fetchTemplatesCount = () => async (dispatch, getState) => {\n    try {\n        dispatch(fetchTemplatesCountInProgress());\n        const fetched = await wpAjaxRequest('fetchTemplatesCountAction' );\n        dispatch(fetchTemplatesCountSuccess(fetched));\n    } catch ( e ) {\n        dispatch(fetchTemplatesCountFailure(e));\n    }\n};"],"names":["CreateTemplateModal","modalVisible","setModalVisible","savedTemplates","history","findOptions","setFindOptions","templateTypeOptions","setTemplateTypeOptions","mode","control","register","handleSubmit","formState","errors","isValid","watch","belongsTo","find","value","then","res","catch","console","error","err","message","templatesAlreadyCreated","filter","template","newTemplateTypeOptions","metaTypes","CUSTOM_POST_TYPE","checkArchiveTemplate","t","templateType","checkSingleTemplate","checkRelatedTemplate","isNative","length","push","label","TAXONOMY","onSubmit","data","required","e","preventDefault","TemplateListElement","id","element","handleDeleteTemplate","openDeleteModal","link","stopPropagation","TemplateList","dispatch","state","fetchTemplatesReducer","fetched","loading","fetchTemplatesCountReducer","fetchedCount","loadingCount","fetchSettingsReducer","settingsLoading","settings","deleteTemplateReducer","deleteTemplateErrors","deleteTemplateSuccess","success","deleteTemplateLoading","page","didMountRef","fetchedSuccess","setFetchedSuccess","modalTemplateVisible","setModalTemplateVisible","perPage","totalPages","Math","ceil","current","toast","map","name","type","button","document","globals","is_rtl","border","ActionsBar","title","actions","secondaryActions","Breadcrumb","isLast","Breadcrumbs","crumbs","crumb","index","Copyright","Date","getFullYear","HeaderMenu","isVisible","setIsVisible","node","handleOutsideTitleBoxClick","contains","target","addEventListener","removeEventListener","LanguagePlaceholder","language","availableLanguages","available_languages","languageLabel","l","Logo","plugin_version","Header","isMenuVisible","setIsMenuVisible","Layout","children","Pagination","currentPage","records","rows","i","row","deleteTemplate","getState","fetchTemplates","meta","fetchTemplatesCount"],"sourceRoot":""}